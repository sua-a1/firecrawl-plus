.cursorrules

Concise guidelines for the Cursor Composer "Agent Mode" in the "firecrawl-plus" project. Links below point to more detailed rules:

## Tech Stack

- NestJS
- Supabase
- TypeScript

## 1. Directory & Initialization
• Confirm you are in "firecrawl-plus/apps/api" before every task.  
• Read .cursorrules, [@plus-addition-docs/nestjs-rules.md](#), and [@plus-addition-docs/prd.md](#).   
• Avoid unrelated changes, file deletions, or file creations unless explicitly requested.
--------------------------------------------------------------------------------

## 2. Workflow Outline
1. Task Initialization  
   – Clarify user goals, open/update session logs, define success criteria.  
2. Context Management  
   – Use list_dir, file_search, codebase_search, grep_search; request missing context.  
3. Execution & Coding  
   – Conform to guidelines from [@plus-addition-docs/nestjs-rules.md](#)
   – Keep commits small, logical, descriptive.  
4. Verification  
   – Update session notes, tests, and relevant docs
5. Conclusion  
   – Summarize changes, confirm alignment with rule files, finalize tasks.

--------------------------------------------------------------------------------

## 3. Code Organization
• Keep domain logic centralized (e.g., "mega file" for ticket workflows).  
• Place shared types in /types or /app/lib/types.  
• Name files predictably: page.tsx, layout.tsx, route.ts, server-actions.ts.  
• IMPORTANT: Import Shadcn components and Tailwind instead of creating new ones. Only implement custom components using Radix if they don't exist in Shadcn UI.
• ALWAYS use the --legacy-peer-deps flag when installing packages with npm/npx.
• The project uses PowerShell as the default terminal.

--------------------------------------------------------------------------------

## 4. Security & Environment
• Use .env for sensitive data on the server; never expose secrets to the client.  
• Don't alter schemas unless specifically asked.  

--------------------------------------------------------------------------------

## 5. Commits & Code Style
• Provide concise, descriptive commit messages; do not mix unrelated changes.  
• Write functional, type-safe TS: prefer iteration, pure functions, minimal braces.  
• Validate inputs on the server.  

--------------------------------------------------------------------------------

## 6. References & Enforcement
• Always check [@plus-addition-docs/prd.md](#) and [@plus-addition-docs/nestjs-rules.md](#) for final project requirements.  
• Escalate or clarify conflicts when necessary.  
• This .cursorrules plus the PRD have ultimate authority.