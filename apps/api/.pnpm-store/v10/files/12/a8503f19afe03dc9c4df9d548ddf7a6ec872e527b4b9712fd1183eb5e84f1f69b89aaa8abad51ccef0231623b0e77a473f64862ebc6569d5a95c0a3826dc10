"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Assistant Data Plane API
 * Pinecone Assistant Engine is a context engine to store and retrieve relevant knowledge from millions of documents at scale. This API supports interactions with assistants.
 *
 * The version of the OpenAPI document: 2025-01
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextRequestToJSON = exports.ContextRequestFromJSONTyped = exports.ContextRequestFromJSON = exports.instanceOfContextRequest = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ContextRequest interface.
 */
function instanceOfContextRequest(value) {
    let isInstance = true;
    isInstance = isInstance && "query" in value;
    return isInstance;
}
exports.instanceOfContextRequest = instanceOfContextRequest;
function ContextRequestFromJSON(json) {
    return ContextRequestFromJSONTyped(json, false);
}
exports.ContextRequestFromJSON = ContextRequestFromJSON;
function ContextRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'query': json['query'],
        'filter': !(0, runtime_1.exists)(json, 'filter') ? undefined : json['filter'],
    };
}
exports.ContextRequestFromJSONTyped = ContextRequestFromJSONTyped;
function ContextRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'query': value.query,
        'filter': value.filter,
    };
}
exports.ContextRequestToJSON = ContextRequestToJSON;
//# sourceMappingURL=ContextRequest.js.map